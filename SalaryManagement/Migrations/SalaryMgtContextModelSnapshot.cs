// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SalaryManagement.Models;

namespace SalaryManagement.Migrations
{
    [DbContext(typeof(SalaryMgtContext))]
    partial class SalaryMgtContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SalaryManagement.Models.BankDetail", b =>
                {
                    b.Property<int>("BankDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNo")
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<int>("AccountStatus")
                        .HasColumnType("int");

                    b.Property<string>("BankName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.HasKey("BankDetailId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("BankDetail");

                    b.HasData(
                        new
                        {
                            BankDetailId = 1,
                            AccountNo = "123-45671-9",
                            AccountStatus = 0,
                            BankName = "OCBC",
                            BranchCode = "123",
                            EmployeeId = 1
                        },
                        new
                        {
                            BankDetailId = 2,
                            AccountNo = "321-12391-9",
                            AccountStatus = 1,
                            BankName = "DBS",
                            BranchCode = "321",
                            EmployeeId = 1
                        },
                        new
                        {
                            BankDetailId = 3,
                            AccountNo = "110-41136-4",
                            AccountStatus = 1,
                            BankName = "UOB",
                            BranchCode = "110",
                            EmployeeId = 2
                        },
                        new
                        {
                            BankDetailId = 4,
                            AccountNo = "126-44673-6",
                            AccountStatus = 0,
                            BankName = "DBS",
                            BranchCode = "126",
                            EmployeeId = 2
                        },
                        new
                        {
                            BankDetailId = 5,
                            AccountNo = "129-23626-3",
                            AccountStatus = 0,
                            BankName = "POSB",
                            BranchCode = "129",
                            EmployeeId = 3
                        },
                        new
                        {
                            BankDetailId = 6,
                            AccountNo = "130-14677-9",
                            AccountStatus = 1,
                            BankName = "DBS",
                            BranchCode = "130",
                            EmployeeId = 4
                        },
                        new
                        {
                            BankDetailId = 7,
                            AccountNo = "233-55632-8",
                            AccountStatus = 0,
                            BankName = "CITI",
                            BranchCode = "233",
                            EmployeeId = 4
                        },
                        new
                        {
                            BankDetailId = 8,
                            AccountNo = "423-85638-3",
                            AccountStatus = 1,
                            BankName = "DBS",
                            BranchCode = "423",
                            EmployeeId = 5
                        },
                        new
                        {
                            BankDetailId = 9,
                            AccountNo = "527-95475-7",
                            AccountStatus = 0,
                            BankName = "MAYBANK",
                            BranchCode = "527",
                            EmployeeId = 5
                        });
                });

            modelBuilder.Entity("SalaryManagement.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessLevel")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("Date");

                    b.Property<string>("DepartmentName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmpSuppDocs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("Date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("JobTitle")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("MobileNo")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Password")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasDefaultValue("5kOIeXHcGKSjzvjntN7lbJDlMkXaf+onA0sCyvhKN4s=");

                    b.Property<string>("PersonalID")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("Date");

                    b.HasKey("EmployeeId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Employee");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            AccessLevel = 2,
                            Address = "123 Paya Lebar Dr 6 Singapore 123123",
                            Age = 28,
                            DateOfBirth = new DateTime(1993, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentName = "IS",
                            Email = "mich@gmail.com",
                            EndDate = new DateTime(2032, 1, 29, 0, 0, 0, 0, DateTimeKind.Local),
                            FirstName = "Mich",
                            JobTitle = "System Administrator",
                            LastName = "Anderson",
                            MobileNo = "12345678",
                            PersonalID = "S1234567A",
                            StartDate = new DateTime(2021, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            EmployeeId = 2,
                            AccessLevel = 1,
                            Address = "321 Paya Lebar Dr 6 Singapore 123321",
                            Age = 31,
                            DateOfBirth = new DateTime(1990, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentName = "Marketing",
                            Email = "trish@gmail.com",
                            EndDate = new DateTime(2032, 1, 29, 0, 0, 0, 0, DateTimeKind.Local),
                            FirstName = "Trish",
                            JobTitle = "Marketing Executive",
                            LastName = "Ng",
                            MobileNo = "87654321",
                            PersonalID = "S7654321A",
                            StartDate = new DateTime(2022, 1, 13, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            EmployeeId = 3,
                            AccessLevel = 0,
                            Address = "103 Toa Payoh Dr 6 Singapore 456103",
                            Age = 36,
                            DateOfBirth = new DateTime(1986, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentName = "HR",
                            Email = "jack@gmail.com",
                            EndDate = new DateTime(2032, 1, 29, 0, 0, 0, 0, DateTimeKind.Local),
                            FirstName = "Jack",
                            JobTitle = "HR Manager",
                            LastName = "Lozano",
                            MobileNo = "12457448",
                            PersonalID = "S1265437A",
                            StartDate = new DateTime(2022, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            EmployeeId = 4,
                            AccessLevel = 1,
                            Address = "450 Toa Payoh Dr 6 Singapore 456450",
                            Age = 62,
                            DateOfBirth = new DateTime(1960, 7, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentName = "Sales",
                            Email = "jill@gmail.com",
                            EndDate = new DateTime(2032, 1, 29, 0, 0, 0, 0, DateTimeKind.Local),
                            FirstName = "Jill",
                            JobTitle = "Sales Director",
                            LastName = "Oconnell",
                            MobileNo = "87742422",
                            PersonalID = "S7657656A",
                            StartDate = new DateTime(2021, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            EmployeeId = 5,
                            AccessLevel = 1,
                            Address = "117 Tampines St 11 Singapore 510117",
                            Age = 67,
                            DateOfBirth = new DateTime(1955, 9, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentName = "IT",
                            Email = "tim@gmail.com",
                            EndDate = new DateTime(2032, 1, 29, 0, 0, 0, 0, DateTimeKind.Local),
                            FirstName = "Tim",
                            JobTitle = "IT Manager",
                            LastName = "Ong",
                            MobileNo = "17422344",
                            PersonalID = "S1254432A",
                            StartDate = new DateTime(2021, 3, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("SalaryManagement.Models.Salary", b =>
                {
                    b.Property<int>("SalaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("BasicSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Bonus")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Deduction")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("Date");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("Month")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("SalaryAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Year")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("SalaryId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Salary");

                    b.HasData(
                        new
                        {
                            SalaryId = 1,
                            BasicSalary = 6700m,
                            Bonus = 300m,
                            Deduction = 0m,
                            EmployeeId = 1,
                            InvoiceDate = new DateTime(2022, 1, 29, 0, 0, 0, 0, DateTimeKind.Local),
                            ModifiedBy = 0,
                            Month = "Jan",
                            Remarks = "Promoted",
                            SalaryAmt = 7000m,
                            Year = "2022"
                        },
                        new
                        {
                            SalaryId = 2,
                            BasicSalary = 3700m,
                            Bonus = 0m,
                            Deduction = 0m,
                            EmployeeId = 1,
                            InvoiceDate = new DateTime(2022, 1, 29, 0, 0, 0, 0, DateTimeKind.Local),
                            ModifiedBy = 0,
                            Month = "Dec",
                            Remarks = "",
                            SalaryAmt = 3700m,
                            Year = "2021"
                        },
                        new
                        {
                            SalaryId = 3,
                            BasicSalary = 5000m,
                            Bonus = 0m,
                            Deduction = 0m,
                            EmployeeId = 2,
                            InvoiceDate = new DateTime(2022, 1, 29, 0, 0, 0, 0, DateTimeKind.Local),
                            ModifiedBy = 0,
                            Month = "Jan",
                            Remarks = "",
                            SalaryAmt = 5000m,
                            Year = "2022"
                        },
                        new
                        {
                            SalaryId = 4,
                            BasicSalary = 8700m,
                            Bonus = 0m,
                            Deduction = 0m,
                            EmployeeId = 3,
                            InvoiceDate = new DateTime(2022, 1, 29, 0, 0, 0, 0, DateTimeKind.Local),
                            ModifiedBy = 0,
                            Month = "Jan",
                            Remarks = "",
                            SalaryAmt = 8700m,
                            Year = "2022"
                        },
                        new
                        {
                            SalaryId = 5,
                            BasicSalary = 5000m,
                            Bonus = 300m,
                            Deduction = 0m,
                            EmployeeId = 3,
                            InvoiceDate = new DateTime(2022, 1, 29, 0, 0, 0, 0, DateTimeKind.Local),
                            ModifiedBy = 0,
                            Month = "Dec",
                            Remarks = "",
                            SalaryAmt = 5300m,
                            Year = "2021"
                        },
                        new
                        {
                            SalaryId = 6,
                            BasicSalary = 3500m,
                            Bonus = 0m,
                            Deduction = 0m,
                            EmployeeId = 4,
                            InvoiceDate = new DateTime(2022, 1, 29, 0, 0, 0, 0, DateTimeKind.Local),
                            ModifiedBy = 0,
                            Month = "Jan",
                            Remarks = "",
                            SalaryAmt = 3500m,
                            Year = "2022"
                        },
                        new
                        {
                            SalaryId = 7,
                            BasicSalary = 4700m,
                            Bonus = 0m,
                            Deduction = 0m,
                            EmployeeId = 4,
                            InvoiceDate = new DateTime(2022, 1, 29, 0, 0, 0, 0, DateTimeKind.Local),
                            ModifiedBy = 0,
                            Month = "Dec",
                            Remarks = "",
                            SalaryAmt = 4700m,
                            Year = "2021"
                        },
                        new
                        {
                            SalaryId = 8,
                            BasicSalary = 4500m,
                            Bonus = 0m,
                            Deduction = 0m,
                            EmployeeId = 5,
                            InvoiceDate = new DateTime(2022, 1, 29, 0, 0, 0, 0, DateTimeKind.Local),
                            ModifiedBy = 0,
                            Month = "Jan",
                            Remarks = "",
                            SalaryAmt = 4500m,
                            Year = "2022"
                        },
                        new
                        {
                            SalaryId = 9,
                            BasicSalary = 6000m,
                            Bonus = 0m,
                            Deduction = 0m,
                            EmployeeId = 5,
                            InvoiceDate = new DateTime(2022, 1, 29, 0, 0, 0, 0, DateTimeKind.Local),
                            ModifiedBy = 0,
                            Month = "Dec",
                            Remarks = "",
                            SalaryAmt = 6000m,
                            Year = "2021"
                        },
                        new
                        {
                            SalaryId = 10,
                            BasicSalary = 6000m,
                            Bonus = 0m,
                            Deduction = 0m,
                            EmployeeId = 2,
                            InvoiceDate = new DateTime(2022, 1, 29, 0, 0, 0, 0, DateTimeKind.Local),
                            ModifiedBy = 0,
                            Month = "Dec",
                            Remarks = "",
                            SalaryAmt = 6000m,
                            Year = "2021"
                        });
                });

            modelBuilder.Entity("SalaryManagement.Models.BankDetail", b =>
                {
                    b.HasOne("SalaryManagement.Models.Employee", "Employee")
                        .WithMany("BankDetail")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("SalaryManagement.Models.Salary", b =>
                {
                    b.HasOne("SalaryManagement.Models.Employee", "Employee")
                        .WithMany("Salary")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("SalaryManagement.Models.Employee", b =>
                {
                    b.Navigation("BankDetail");

                    b.Navigation("Salary");
                });
#pragma warning restore 612, 618
        }
    }
}
